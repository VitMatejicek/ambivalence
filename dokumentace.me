\" nastavení heirloom
.so tmac/cz.tmac
.so tmac/settings.tmac
.so tmac/refer.me
.so tmac/subpoints.me

.he `Lukáš Hozda`Pokřivený obraz duševních poruch v médiích`2019-2020`
.fo ``- % -``

\" titulní stránka
.tp
.(c
Gymnázium Jana Keplera
.)c
.sp 11
.(c
.sz +7
.b "Maturitní práce z Informatiky"
.sz
.)c
.sp 7
.sz 10
.(c
.sz +10
\" název v čj
.b "Systém pro správu studijních materiálů"
.sz
.)c
.sp 1
.(c
.sz +6
\" název v aj
.b "gjk.cat"
.sz
.)c
.sp 7
.(c
\" autor
.sz +6
.b
Lukáš Hozda
.r
.sz
.)c
.sp 3
.(c
\" datum

.)c
.bp

.sh 1 Dokumentace
.pp
.vs +2
Práce se sestává z osmi gitových repozitářů, všechny jsou uloženy v Githubové organizaci \fIgjk-cat\fR
(\W`https://github.com/gjk-cat`https://github.com/gjk-cat\W).
Stěžejní repozitáře jsou tři:
.bu
.b "cat-prep"
.bu
.b "gjk.cat"
.bu
.b "it.gjk.cat"
.pp
.in 0
Těm se budu za okamžik věnovat. Ostatním repozitářům stačí jenom krátké popisky:
.bu
.b "aj.gjk.cat, cj.gjk.cat, tr.gjk.cat"
- \fIcat-prepové knihy\fR obsahující pouze testovací data. V budoucnu
tam budou dodány opravdové materiály. Předměty mimo informatiku však nebyly
součástí zadání.
.bu
.b "theme"
- mírně upravené \fBmdbook\fR téma
.bu
.b "sablona"
- obsahuje prázdnou šablonu \fIcat-prepové\fR knihy vytvořené podle návodu z
README u cat-prepu.

.sh 2 cat-prep
.pp
Toto je primární kus software mojí maturitní práce.
\fIcat-prep\fR je preprocesor pro \fImdbook\fR, který
vytváří systém učitelů, tagů, předmětů a materiálů
na základě informací z gitu a metadat uložených v TOML
hlavičkách souborů.
.pp
.in 0
Nástroj funguje následujícím způsobem:
.np
Ze \fIstdin\fR si přečte reprezentaci mdbookové knihy jako Markdown.
Tohleto mají všechny preprocesory a renderery společné - mdbook má poměrně
unixový způsob rozšíření - všechny utility s ním spojené jsou prakticky
textové filtry, které si přečtou JSON knihy ze standardního vstupu
a vypíšou knihu po změnách zpátky standardní výstup.
.np
Poté se pokusí vytvořit CatContext - primární reprezentaci všech dat
týkajících se dříve zmíněných objektů.
.np
V prvním kroku se ujistí, že pracuje v gitovém repozitáři,
pokud ne, program končí.
.np
Dále si ověří, že existuje složka \fIteachers\fR, která by měla
ověřovat karty učitelů. Pokud tato složka chybí, tak je to pravděpodobně
indikátorem toho, že kniha není připravena pro zpracování \fIcat-preppem\fR.
.np
Pokusí se přečíst a naparsovat všechny karty učitelů.
Karta učitelů obsahuje pouze základní data, viz API dokumentace a návod
přítomný v README.md repozitáře.
.np
Poté identifikuje všechny předměty a jejich pole působení.
Za předmět je považován každý soubor s názvem \fIsubject.md\fR.
Jeho polem působení je složka, ve které se tyto soubory nachází,
a její podsložky. Z tohoto důvodu se nedoporučuje, aby byl
nějaký předmět už v kořenovém adresáři zdroje - všechny ostatní
dokumenty by pod něj automaticky spadaly.
Předmět vnořený v poli působiště jiného předmětu je považován za nedefinované
chování. Program by neměl spadnout, ale může vykazovat překvapivé chování.
.np
U každého z těchto předmětových souborů je vyjmuta hlavička ve formátu TOML
(oddělená řádkem +++) a naparsována do karty předmětu.
.np
Podle umíštění různých předmětových souborů dojde
k vytvoření seznamu materiálových souborů, u kterých
je posléze provedena podobná procedura. Jsou vytvořeny
karty předmětů.
.np
Následně dojde k vytvoření objektů pro materiály, předměty
a učitele, a dojde k vzájemné asociaci mezi nimi tak,
aby měl každý objekt po ruce
vlastní kopii dat, která jsou pro něj důležitá.
Kopie dat je vytvořena proto, aby mohlo docházet
k bezkontextovému (tím se myslí, že stačí samotný objekt)
renderování. Na závěr je vytvořena mapa tagů
.np
Do knihy jsou posléze přidány stránky pro kantory a tagy.
.np
Postupně dojde k průchodu všemi objekty a jejich
vyrenderování. Renderováním se zde myslí vytvoření
\fIRenderSite\fR příkazů, které obsahují kam a jak
se má vložit Markdown/HTML.
.np
Na závěr dojde k průchodu všemi příkazy a jejich vykonání.
Kniha je opět serializována a vypsána do standardního výstupu
pro zpracování mdbookem.
.in 0
.sp 2
.b "Další dokumentace"
.bu
\fBAPI\fR - dokumentace zdrojového kódu je dostupná podle návodu v repozitáře
.bu
\fBZprovoznění a používání\fR - rozepsáno v README.md,
další info na \W`https://gjk.cat`https://gjk.cat\W
.in 0
.sp 2
\fBPozn.:\fR většina dokumentace tohoto projektu je rozepsána buď
v README souborech, nebo jako rustdoc komentáře, nebo na stránce
\W`https://gjk.cat`https://gjk.cat\W

.sh 2 "gjk.cat"
.pp
Toto je normální mdbooková kniha
(i když s modifikovaným tématem a mírně nestandardní syntaxí).
Jejím účelem je sloužit jako portál mezi cat-prep knihami
pro jednotlivé obory.
Je dekorována kočičkou, které pro tento projekt nakreslila
Charlene Olsen.
.pp
Tato stránka obsahuje návody a odkazy, jak se vypořádat s gitem,
markdownem a cat-prepem, jak přidat vyučujícího
(nebo-li oficiálního autora materiálů),
předmět i materiál. Také jsou zde doporučené instrukce
pro přispívání k tomuto projektu a jeho potenciálním odnožím.
.pp
Do tohoto repozitáře jsou jako submoduly nalinkovány všechny
ostatní repozitáře. Jednotlivé cat-prepové repozitáře mají
nalinkovaný už jen \fIcat-prep\fR.

.sh 2 "it.gjk.cat"
.pp
Praktická demonstrace funkcí \fIcat-prepu\fR v podobě
informatického oboru.
Obsahuje výpisky ze dvou plnohodnotných předmětů,
\fIUnixových operačních systémů\fR Emila Milera
a \fIProgramovacího jazyka Python\fR Dawida J. Kubise.
Se svolením jsem do repozitáře přidal jejich jménem,
abych demonstroval funkcionalitu \fIcat-prepu\fR
vyčíst autory materiálů, časy a původce změn z gitových metadat.
Repozitář také obsahuje třetí testovací předmět
a řadu falešných vyučujících na zaplnění různých stránek.

.sh 1 "Technologie"
.pp
Projekt byl napsán převážně v jazyce Rust,
a to z důvodu flexibility, bezpečnosti, výkonu,
plné podpory pro UTF-8, funkcionálních prvků
a osobní preference.
.pp
Integrace s gitem byla zvolena z toho důvodu,
že git je lety ověřený verzovací systém a jeho
rozmanitost funkcí jej umožňuje využít
k zaznamenávání uživatelské aktivity v rámci stránky.
S žádným jiným verzovacím systémem nemám hluboké
zkušenosti, to mělo také svůj podíl.
.pp
\fImdbook\fR byl zvolen proto,
protože se jedná o nejpoužívanější statický
generátor stránek v Rustové komunitě
(v mdbooku je napsaný i \fIThe Rust Programming Language\fR),
má velmi přehlednou strukturu a způsob rozšiřování,
který je nenáročný a agnostický vůči technologiím
a proto, protože je v aktivním vývoji a je již
nějakou dobu oficiálním podporovaným projektem.
.pp
Právě tento aktivní vývoj však přinesl i nějaké nevýhody,
EPUB podpora je ještě nevyzrálá a nepodporuje plnou škálu
markdownu. To má za následek i to, že ebooky vygenerované
z mdbooku sice nepostrádají žádný obsah,
ale nemají plně funkční všechny aspekty.
V případě \fIcat-prepu\fR je problematické to,
že EPUB renderer nechce správně zobrazovat tabulky.
.pp
ZEIT.co byla zvolena jako platforma pro deployment
hned z několika důvodů. Prvním z nich byla moje pozitivní
zkušenost s touto společností, dále, přestože ZEIT nemá
oficiální podporu pro mdbook ani Rust,
bylo zprovoznit projekty triviální, potom automatický deployment
z Githubu a Gitlabu a plná kontrola nad službami ZEIT.co přes
příkazovou řádku.
Automatické TLS/SSL je také vítanou vlastností.

.sh 1 "Vyhodnocení zadání"
.pp
.in 0
Zadání, na kterém jsem se dohodl s vedoucím práce odpovídá těmto bodům:
.np
vytvořit systém postavený na mdBooku pro správu studijních materiálů
.np
měl by generovat webové stránky, PDF a popřípadě EPUB.
.np
vstup má být čitelný a přehledný již v repozitáři
.np
ve vygenerovaných stránkách má existovat seskupování podle tagů
a do jednotlivých předmětů
.np
k aktualizace a zveřejňování stránek má docházet automaticky
.np
systém by měl být propojený s gitem
.np
volitelné funkce, bude-li čas:
.np2
do fulltextového vyhledávače zahrnout i tagy
.np2
posílání informačních emailů studentům
.np2
komentáře k materiálům
.np2
integrace s online playgroundy pro jiné jazyky,
než je Rust
.pp
.in 0
Nejprve bych začal volitelnými funkcemi.
Tagy jsou zahrnuté ve fulltextovém vyhledávači,
ale není jim přiřazena vyšší váha než ostatnímu textu.
Komentáře k materiálům je možné přidávat prostřednictvím
embedované služby \fIDisqus\fR.
Integrace s jinými playgroundy nebyla implementována,
jelikož by to vyžadovalo tvorbu vlastního rendereru,
což je, jak vývoj těch oficiálních naznačují,
zdlouhavá a složitá záležitost.
Rozesílání emailů studentům je problematické,
pokud chceme, aby vygenerované stránky zůstaly statické.
Jako dočasná náhraška za tuto funkcionalitu mohou sloužit automatické
notifikace Githubu.
.pp
.in 0
Co se týče povinných/klíčových funcionalit:
.np
systém je postavený na mdbooku a umožňuje správu studijních materiálů
ve formátu markdown
.np
systém generuje plnohodnotné webové stránky.
Tvorba PDF je umožněna prostřednitvím tisknutí do souboru,
nebo přes LaTeXový renderer. LaTeXový renderer je poměrně
nový software, který má problémy se vypořádávat se složitějším vstupem.
EPUBový renderer ještě nemá plnou podporu pro Markdown a tudíž výstup
také nedosahuje plné kvality. Tyto faktory však nejsou závislé na \fIcat-prepu\fR,
ten je plně future-proof a s tím, jak budou probíhat vývoje těchto rendererů,
se bude zlepšovat i \fIcat-prepový\fR výstup do těchto formátů.
.np
souborová struktura je jasná, hlavičky mají minimální velikost,
kromě složky \fIteachers\fR nejsou žádné další požadavky na soubory
mimo \fIsrc\fR
.np
články se seskupují podle tagů, předmětů a autorů v předvygenerovaných
stránkách, které obsahují seznamy odkazů na rychlé skákání v rámci dokumentu.
.np
stránky gjk.cat a dokumentace \fIcat-prepu\fR popisuje integraci se ZEIT.co
za účelem rychlého a jednoduchého deploymentu. Stačí na konfigurovat skript,
zapnout integraci a nastavit projekt dle instrukcí.
.np
systém využívá gitu k získávání informací o historii souborů
a aktivitě uživatelů

.sh 1 "Zprovoznění projektu"
.pp
Návod, jakým lze projekt zprovoznit je popsán v README.md \fIcat-prepu\fR.
Požadavky na zprovoznění projektu jsou minimální:
.bu
Linux s nainstalovaným nighly rustem
.bu
nainstalovaný mdbook
.bu
následující programy: \fIgit, ls, xargs, true, sh\fR
.bu
v případě využití cli rozhraní pro ZEIT.co je ještě zapotřebí \fInode, npm\fR
a jejich klient \fInow.sh\fR. Viz stránky \W`https://now.sh`https://now.sh\W
.in 0
.sp 2
Další instrukce jsou k nalezení na stránce gjk.cat.

